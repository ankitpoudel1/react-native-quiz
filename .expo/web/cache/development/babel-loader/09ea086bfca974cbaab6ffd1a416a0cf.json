{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ankit/Documents/simpleApp/components/AnswerOption.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport default function AnswerOption(props) {\n  var _useState = useState('#250c6f'),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttonColor = _useState2[0],\n      setButtonColor = _useState2[1];\n\n  var _useState3 = useState(props.isCorrectAnswer),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isCorrectAnswer = _useState4[0],\n      setIsCorrectAnswer = _useState4[1];\n\n  function checkCorrect() {\n    if (isCorrectAnswer) {\n      setButtonColor('green');\n      props.setCorrectlyAnswered(true);\n    } else {\n      setButtonColor('red');\n      props.setCorrectlyAnswered(false);\n    }\n\n    props.setQuestionAnswered(true);\n  }\n\n  useEffect(function () {\n    if (isCorrectAnswer && !props.correctlyAnswered && props.questionAnswered) {\n      setButtonColor('green');\n    }\n\n    if (props.questionChanged) {\n      setButtonColor('#250c6f');\n    }\n  });\n  return React.createElement(View, {\n    style: {\n      width: '80%',\n      left: '10%',\n      padding: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: props.answer,\n    onPress: function onPress() {\n      return checkCorrect();\n    },\n    color: buttonColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/home/ankit/Documents/simpleApp/components/AnswerOption.js"],"names":["React","useState","useEffect","AnswerOption","props","buttonColor","setButtonColor","isCorrectAnswer","setIsCorrectAnswer","checkCorrect","setCorrectlyAnswered","setQuestionAnswered","correctlyAnswered","questionAnswered","questionChanged","width","left","padding","answer"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;;;AAGA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAEvC,kBAAqCH,QAAQ,CAAC,SAAD,CAA7C;AAAA;AAAA,MAAOI,WAAP;AAAA,MAAmBC,cAAnB;;AACA,mBAA6CL,QAAQ,CAACG,KAAK,CAACG,eAAP,CAArD;AAAA;AAAA,MAAOA,eAAP;AAAA,MAAuBC,kBAAvB;;AACA,WAASC,YAAT,GAAuB;AACnB,QAAIF,eAAJ,EAAoB;AAChBD,MAAAA,cAAc,CAAC,OAAD,CAAd;AACAF,MAAAA,KAAK,CAACM,oBAAN,CAA2B,IAA3B;AACH,KAHD,MAIK;AACDJ,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,MAAAA,KAAK,CAACM,oBAAN,CAA2B,KAA3B;AACH;;AACDN,IAAAA,KAAK,CAACO,mBAAN,CAA0B,IAA1B;AACH;;AAEDT,EAAAA,SAAS,CAAE,YAAM;AACb,QAAIK,eAAe,IAAI,CAACH,KAAK,CAACQ,iBAA1B,IAA+CR,KAAK,CAACS,gBAAzD,EAA0E;AACtEP,MAAAA,cAAc,CAAC,OAAD,CAAd;AACH;;AACD,QAAIF,KAAK,CAACU,eAAV,EAA0B;AACtBR,MAAAA,cAAc,CAAC,SAAD,CAAd;AACH;AACJ,GAPQ,CAAT;AAUA,SAAQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACjBS,MAAAA,KAAK,EAAC,KADW;AAEjBC,MAAAA,IAAI,EAAC,KAFY;AAGjBC,MAAAA,OAAO,EAAE;AAHQ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKJ,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEb,KAAK,CAACc,MAArB;AACA,IAAA,OAAO,EAAE;AAAA,aAAKT,YAAY,EAAjB;AAAA,KADT;AAEA,IAAA,KAAK,EAAEJ,WAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALI,CAAR;AAUH","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { Button, View ,Text} from 'react-native';\n\nexport default function AnswerOption(props){\n    \n    const [buttonColor,setButtonColor] = useState('#250c6f');\n    const [isCorrectAnswer,setIsCorrectAnswer] = useState(props.isCorrectAnswer);\n    function checkCorrect(){\n        if (isCorrectAnswer){\n            setButtonColor('green');\n            props.setCorrectlyAnswered(true);\n        }\n        else {\n            setButtonColor('red');\n            props.setCorrectlyAnswered(false);\n        }\n        props.setQuestionAnswered(true);\n    }\n\n    useEffect( () => {\n        if (isCorrectAnswer && !props.correctlyAnswered && props.questionAnswered){\n            setButtonColor('green');\n        }\n        if (props.questionChanged){\n            setButtonColor('#250c6f');\n        }\n    })\n   \n\n    return (<View style={{\n        width:'80%',\n        left:'10%',\n        padding: '1%'\n    }}>\n        <Button title={props.answer}\n        onPress={()=> checkCorrect()}\n        color={buttonColor}\n        />\n    </View>)\n}"]},"metadata":{},"sourceType":"module"}