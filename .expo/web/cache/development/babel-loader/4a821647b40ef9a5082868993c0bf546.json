{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ankit/Documents/simpleApp/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport QuizBody from \"./components/QuizBody\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  function fetchQuizzes() {\n    var result, json;\n    return _regeneratorRuntime.async(function fetchQuizzes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://opentdb.com/api.php?amount=10'));\n\n          case 2:\n            result = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(result.json());\n\n          case 5:\n            json = _context.sent;\n            console.log(json.results);\n            setQuestions(json.results);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n\n  if (questions.length > 0) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, React.createElement(Button, {\n      onPress: function onPress() {\n        return fetchQuizzes();\n      },\n      title: \"Start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 8\n      }\n    }), React.createElement(StatusBar, {\n      style: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#4a4a46',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/ankit/Documents/simpleApp/App.js"],"names":["StatusBar","React","useState","QuizBody","App","questions","setQuestions","fetchQuizzes","fetch","result","json","console","log","results","length","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;AAEA,OAAOC,QAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAE5B,kBAAiCF,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAiBC,YAAjB;;AAEA,WAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACuBC,KAAK,CAAC,uCAAD,CAD5B;;AAAA;AACQC,YAAAA,MADR;AAAA;AAAA,6CAEqBA,MAAM,CAACC,IAAP,EAFrB;;AAAA;AAEQA,YAAAA,IAFR;AAGEC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB;AACAP,YAAAA,YAAY,CAACI,IAAI,CAACG,OAAN,CAAZ;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKC;;AAED,MAAIR,SAAS,CAACS,MAAV,GAAiB,CAArB,EAAuB;AACrB,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD,GAND,MAOK;AACL,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,MAAD;AACC,MAAA,OAAO,EAAE;AAAA,eAAIT,YAAY,EAAhB;AAAA,OADV;AAEC,MAAA,KAAK,EAAC,OAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAKE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASC;AACF;AAED,IAAMQ,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAGTC,IAAAA,eAAe,EAAE,SAHR;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE;AALP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useState} from 'react';\nimport { StyleSheet, Button,Text, View } from 'react-native';\nimport QuizBody from './components/QuizBody';\n\nexport default function App() {\n\n  const [questions,setQuestions] = useState([]);\n\n  async function fetchQuizzes(){ \n    const result = await fetch('https://opentdb.com/api.php?amount=10');\n    const json = await result.json();\n    console.log(json.results);\n    setQuestions(json.results);\n  };\n\n  if (questions.length>0){\n    return (\n      <View style={styles.container}>\n        {/* <QuizBody questions={questions}/> */}\n      </View>\n    )\n  }\n  else {\n  return (\n    <View style={styles.container}>\n       <Button\n        onPress={()=>fetchQuizzes()}\n        title=\"Start\">\n       </Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // backgroundColor: '#ed3',\n    backgroundColor: '#4a4a46',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}