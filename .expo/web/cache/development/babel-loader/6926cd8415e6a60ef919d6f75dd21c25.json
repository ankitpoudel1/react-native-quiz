{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ankit/Documents/simpleApp/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport QuizBody from \"./components/QuizBody\";\nimport AnswerOption from \"./components/AnswerOption\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      category = _useState4[0],\n      setCategory = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      difficulty = _useState6[0],\n      setDifficulty = _useState6[1];\n\n  var _useState7 = useState('category-select'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentPage = _useState8[0],\n      setCurrentPage = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentQuestion = _useState10[0],\n      setCurrentQuestion = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      quizLoaded = _useState12[0],\n      setQuizLoaded = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      questionAnswered = _useState14[0],\n      setQuestionAnswered = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      correctlyAnswered = _useState16[0],\n      setCorrectlyAnswered = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      questionChanged = _useState18[0],\n      setQuestionChanged = _useState18[1];\n\n  var answers = [];\n  var answersOptions = [];\n  var isCorrectAnswer;\n\n  function fetchQuizzes() {\n    var result, json;\n    return _regeneratorRuntime.async(function fetchQuizzes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://opentdb.com/api.php?amount=10&category=' + category + '&difficulty=' + difficulty));\n\n          case 2:\n            result = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(result.json());\n\n          case 5:\n            json = _context.sent;\n            setQuestions(json.results);\n            setQuizLoaded(true);\n            setCurrentPage('quiz-page');\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n\n  function changeCategory(catId) {\n    setCategory(catId);\n    setCurrentPage('difficulty-select');\n  }\n\n  function changeDifficulty(difficulty) {\n    setDifficulty(difficulty);\n    setCurrentPage('quiz-loading');\n  }\n\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var _ref = [array[j], array[i]];\n      array[i] = _ref[0];\n      array[j] = _ref[1];\n    }\n  }\n\n  function handleQuestionChange() {\n    if (currentQuestion < 10) {\n      setCurrentQuestion(currentQuestion + 1);\n      setQuestionChanged(true);\n    }\n  }\n\n  function renderAnswerRow() {\n    if (answers.length == 0) {\n      answers = questions[currentQuestion]['incorrect_answers'];\n      answers.push(questions[currentQuestion]['correct_answer']);\n      shuffleArray(answers);\n      Object.keys(answers).forEach(function (key, index) {\n        isCorrectAnswer = false;\n\n        if (answers[key] == questions[currentQuestion]['correct_answer']) {\n          console.log(answers[key]);\n          isCorrectAnswer = true;\n        }\n\n        ;\n        answersOptions.push(React.createElement(AnswerOption, {\n          key: key,\n          answerKey: key,\n          answer: this[key],\n          setQuestionAnswered: setQuestionAnswered,\n          isCorrectAnswer: isCorrectAnswer,\n          setCorrectlyAnswered: setCorrectlyAnswered,\n          correctlyAnswered: correctlyAnswered,\n          questionAnswered: questionAnswered,\n          questionChanged: questionChanged,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 27\n          }\n        }));\n      }, answers);\n      return answersOptions;\n    }\n  }\n\n  ;\n  useEffect(function () {\n    if (currentPage == 'quiz-loading' && !quizLoaded) {\n      fetchQuizzes();\n    }\n\n    if (questionChanged) {\n      setCorrectlyAnswered(false);\n      setQuestionAnswered(false);\n      setQuestionChanged(false);\n    }\n  });\n\n  if (currentPage == 'category-select') {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, \"Welcome to quiz\"), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, \"Select Category\"), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }\n    }, React.createElement(Button, {\n      onPress: function onPress() {\n        return changeCategory(21);\n      },\n      title: \"Sports\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    })), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }\n    }, React.createElement(Button, {\n      onPress: function onPress() {\n        return changeCategory(19);\n      },\n      title: \"General Knowledge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }\n    })), React.createElement(StatusBar, {\n      style: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    })));\n  } else if (currentPage == 'difficulty-select') {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"Select Difficulty\")), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 8\n      }\n    }, React.createElement(Button, {\n      title: \"easy\",\n      onPress: function onPress() {\n        return changeDifficulty('easy');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    })), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 8\n      }\n    }, React.createElement(Button, {\n      title: \"medium\",\n      onPress: function onPress() {\n        return changeDifficulty('medium');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    })), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 8\n      }\n    }, React.createElement(Button, {\n      title: \"hard\",\n      onPress: function onPress() {\n        return changeDifficulty('hard');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    })));\n  } else if (currentPage == 'quiz-loading') {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, \"Loading...\"));\n  } else if (currentPage == 'quiz-page') {\n    return React.createElement(View, {\n      style: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#000'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 12\n      }\n    }, React.createElement(View, {\n      style: {\n        height: '20%',\n        color: \"#fff\",\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, questions[currentQuestion]['question'])), React.createElement(View, {\n      style: {\n        height: '45%',\n        color: \"#4a4\",\n        margin: '4%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, renderAnswerRow(), React.createElement(View, {\n      style: {\n        color: 'white',\n        top: '60%',\n        left: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      onPress: function onPress() {\n        handleQuestionChange();\n      },\n      style: {\n        color: '#fff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, \" Next >> \"))));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#4a4a46',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  menuButton: {\n    padding: '1%'\n  }\n});","map":{"version":3,"sources":["/home/ankit/Documents/simpleApp/App.js"],"names":["StatusBar","React","useEffect","useState","QuizBody","AnswerOption","App","questions","setQuestions","category","setCategory","difficulty","setDifficulty","currentPage","setCurrentPage","currentQuestion","setCurrentQuestion","quizLoaded","setQuizLoaded","questionAnswered","setQuestionAnswered","correctlyAnswered","setCorrectlyAnswered","questionChanged","setQuestionChanged","answers","answersOptions","isCorrectAnswer","fetchQuizzes","fetch","result","json","results","changeCategory","catId","changeDifficulty","shuffleArray","array","i","length","j","Math","floor","random","handleQuestionChange","renderAnswerRow","push","Object","keys","forEach","key","index","console","log","styles","container","padding","height","width","backgroundColor","color","alignItems","justifyContent","margin","top","left","StyleSheet","create","flex","menuButton"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useEffect, useState} from 'react';\nimport { StyleSheet, Button,Text, View } from 'react-native';\nimport QuizBody from './components/QuizBody';\nimport AnswerOption from './components/AnswerOption';\n\nexport default function App() {\n\n  const [questions,setQuestions] = useState([]);\n  const [category,setCategory] = useState(null);\n  const [difficulty,setDifficulty] = useState(null);\n  const [currentPage,setCurrentPage] = useState('category-select');\n  const [currentQuestion,setCurrentQuestion] = useState(0);\n  const [quizLoaded,setQuizLoaded] = useState(false);\n  const [questionAnswered,setQuestionAnswered] = useState(false);\n  const [correctlyAnswered,setCorrectlyAnswered] = useState(null);\n  const [questionChanged,setQuestionChanged] = useState(false);\n \n  let answers = [];\n  let answersOptions = [];\n  let isCorrectAnswer;\n\n  async function fetchQuizzes(){ \n    const result = await fetch('https://opentdb.com/api.php?amount=10&category='+category+'&difficulty='+difficulty);\n    const json = await result.json();\n    setQuestions(json.results);\n    setQuizLoaded(true);\n    setCurrentPage('quiz-page');\n  };\n  \n  function changeCategory(catId){\n    setCategory(catId);\n    setCurrentPage('difficulty-select');\n\n  }\n\n  function changeDifficulty(difficulty){\n    setDifficulty(difficulty);\n    setCurrentPage('quiz-loading');\n  }\n\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  function handleQuestionChange(){\n    if (currentQuestion<10){\n        setCurrentQuestion(currentQuestion+1);\n        setQuestionChanged(true);\n    }\n}\n\n  function renderAnswerRow(){\n\n    if (answers.length==0){\n    // console.log(questions[currentQuestion]);\n    answers = questions[currentQuestion]['incorrect_answers'];\n    answers.push(questions[currentQuestion]['correct_answer']);\n\n    // console.log(answers);\n    \n    shuffleArray(answers);\n    // console.log(answers);\n\n    Object.keys(answers).forEach(function(key, index) {\n      isCorrectAnswer = false;\n\n      if(answers[key]==questions[currentQuestion]['correct_answer']){\n        console.log(answers[key]);\n        isCorrectAnswer=true;\n      };\n   \n      answersOptions.push(<AnswerOption key={key} answerKey={key} answer={this[key]} \n                      setQuestionAnswered={setQuestionAnswered} isCorrectAnswer={isCorrectAnswer}\n                      setCorrectlyAnswered={setCorrectlyAnswered} correctlyAnswered={correctlyAnswered}\n                      questionAnswered={questionAnswered} questionChanged={questionChanged}\n      />);\n      }, answers);\n \n       return answersOptions;\n    }\n  };\n  \n\n  useEffect(()=>{\n    if (currentPage=='quiz-loading' && !quizLoaded){\n      fetchQuizzes();\n    }\n\n    if (questionChanged){\n      setCorrectlyAnswered(false);\n      setQuestionAnswered(false);\n      setQuestionChanged(false);\n  }\n    // if (questions.length>0){\n    //     renderAnswerRow();\n    // }\n  })\n\n if (currentPage == 'category-select'){\n\n  return (\n    <View style={styles.container}>\n      <Text>Welcome to quiz</Text>\n      <Text>Select Category</Text>\n    <View>\n    \n    <View style={{padding:'1%'}}>\n    <Button\n        onPress={()=>changeCategory(21)}\n        title=\"Sports\"\n        >\n    </Button>\n    </View> \n    \n    <View style={{padding:'1%'}}>\n    <Button\n        onPress={()=>changeCategory(19)}\n        title=\"General Knowledge\">\n    </Button>\n    </View>\n      <StatusBar style=\"auto\" />\n    </View>\n    </View>\n\n  );\n  }\n  \n  else if (currentPage == 'difficulty-select') {\n    return (<View style={styles.container}>\n        <View><Text>Select Difficulty</Text></View>\n       <View style={{padding:'1%'}}><Button title=\"easy\" onPress={()=>changeDifficulty('easy')}/></View>\n       <View style={{padding:'1%'}}><Button title=\"medium\" onPress={()=>changeDifficulty('medium')}/></View> \n       <View style={{padding:'1%'}}><Button title=\"hard\" onPress={()=>changeDifficulty('hard')}/></View> \n      </View>\n    );\n  }\n\n  else if (currentPage == 'quiz-loading'){\n    return (<View style={styles.container}>\n      <Text>Loading...</Text>\n      </View>);\n  }\n\n  else if (currentPage == 'quiz-page'){\n    return(<View style={{\n                height:'100%',\n                width:'100%',\n                backgroundColor:'#000',\n            }}>\n            <View style={{\n                          height:'20%',\n                          //  width:'50%',\n                          //  backgroundColor:'#067',\n                          color:\"#fff\",\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                      }}\n            \n            >\n                <Text style={{\n                    color:'white',\n                  \n                }}>{questions[currentQuestion]['question']}</Text>\n            </View>\n            <View style={{\n                    height:'45%',\n                    //  width:'50%',\n                    //  backgroundColor:'#024',\n                     color:\"#4a4\",\n                     margin: '4%',\n                    //  border: '2px solid #fff',\n            }}\n            >\n              \n              {renderAnswerRow()}\n\n              <View style={{\n                    // position:'relative',\n                    color:'white',\n                    top:'60%',\n                    left:'75%'\n                }}>\n                    <Text\n                    onPress={()=>{handleQuestionChange()}}\n                    style={{\n                        color:'#fff'\n                    }}\n                    > Next >> </Text>\n                </View>\n            </View>\n    </View>);\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // backgroundColor: '#ed3',\n    backgroundColor: '#4a4a46',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  menuButton: {\n    padding:'1%',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}