{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ankit/Documents/simpleApp/components/QuizBody.js\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport default function QuizBody(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentQuestion = _useState2[0],\n      setCurrentQuestion = _useState2[1];\n\n  var question = props.questions[currentQuestion];\n  var answers = [];\n  Object.keys(question.answers).forEach(function (key, index) {\n    React.createElement(View, {\n      style: {\n        width: '80%',\n        left: '10%',\n        top: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, React.createElement(Button, {\n      title: this[key],\n      color: \"#250c6f\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }));\n  }, question.answers);\n  return React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      backgroundColor: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '20%',\n      color: \"#fff\",\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, question.question)), React.createElement(View, {\n    style: {\n      height: '45%',\n      backgroundColor: '#024',\n      color: \"#4a4\",\n      margin: '4%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '80%',\n      left: '10%',\n      top: '5%',\n      border: '1px solid #fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"answer1\",\n    color: \"#250c6f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      width: '80%',\n      left: '10%',\n      top: '8%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"answer2\",\n    color: \"#250c6f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/ankit/Documents/simpleApp/components/QuizBody.js"],"names":["React","useState","QuizBody","props","currentQuestion","setCurrentQuestion","question","questions","answers","Object","keys","forEach","key","index","width","left","top","height","backgroundColor","color","alignItems","justifyContent","margin","border"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACnC,kBAA6CF,QAAQ,CAAC,CAAD,CAArD;AAAA;AAAA,MAAOG,eAAP;AAAA,MAAuBC,kBAAvB;;AACA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,SAAN,CAAgBH,eAAhB,CAAjB;AACA,MAAII,OAAO,GAAG,EAAd;AAGAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,QAAQ,CAACE,OAArB,EAA8BG,OAA9B,CAAsC,UAASC,GAAT,EAAcC,KAAd,EAAqB;AACvD,wBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AACTC,QAAAA,KAAK,EAAC,KADG;AAETC,QAAAA,IAAI,EAAC,KAFI;AAGTC,QAAAA,GAAG,EAAE;AAHI,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKJ,GAAL,CAAf;AACA,MAAA,KAAK,EAAC,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ;AASD,GAVH,EAUKN,QAAQ,CAACE,OAVd;AAYA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTS,MAAAA,MAAM,EAAC,MADE;AAETH,MAAAA,KAAK,EAAC,MAFG;AAGTI,MAAAA,eAAe,EAAC;AAHP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACRD,MAAAA,MAAM,EAAC,KADC;AAIRE,MAAAA,KAAK,EAAC,MAJE;AAKRC,MAAAA,UAAU,EAAE,QALJ;AAMRC,MAAAA,cAAc,EAAE;AANR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTF,MAAAA,KAAK,EAAC;AADG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIb,QAAQ,CAACA,QAHb,CAVJ,CALJ,EAsBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACLW,MAAAA,MAAM,EAAC,KADF;AAGJC,MAAAA,eAAe,EAAC,MAHZ;AAIJC,MAAAA,KAAK,EAAC,MAJF;AAKJG,MAAAA,MAAM,EAAE;AALJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTR,MAAAA,KAAK,EAAC,KADG;AAETC,MAAAA,IAAI,EAAC,KAFI;AAGTC,MAAAA,GAAG,EAAE,IAHI;AAITO,MAAAA,MAAM,EAAE;AAJC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AACI,IAAA,KAAK,EAAC,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CATJ,EAqBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTT,MAAAA,KAAK,EAAC,KADG;AAETC,MAAAA,IAAI,EAAC,KAFI;AAGTC,MAAAA,GAAG,EAAE;AAHI,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AACA,IAAA,KAAK,EAAC,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CArBJ,CAtBJ,CADJ;AA0DH","sourcesContent":["import React,{useState} from 'react';\nimport { Button, View ,Text} from 'react-native';\n\nexport default function QuizBody(props){\n    const [currentQuestion,setCurrentQuestion] = useState(0);\n    const question = props.questions[currentQuestion];\n    let answers = [];\n    // console.log(Object.keys(question.answers).length);\n    \n    Object.keys(question.answers).forEach(function(key, index) {\n        <View style={{\n            width:'80%',\n            left:'10%',\n            top: '5%'\n        }}>\n            <Button title={this[key]}\n            color=\"#250c6f\"\n            />\n        </View>\n      }, question.answers);\n\n    return (\n        <View style={{\n            height:'100%',\n            width:'100%',\n            backgroundColor:'#000',\n        }}>\n            <View style={{\n                 height:'20%',\n                //  width:'50%',\n                //  backgroundColor:'#067',\n                 color:\"#fff\",\n                 alignItems: 'center',\n                 justifyContent: 'center',\n            }}\n            \n            >\n                <Text style={{\n                    color:'white',\n                  \n                }}>{question.question}</Text>\n            </View>\n\n\n            <View style={{\n                    height:'45%',\n                    //  width:'50%',\n                     backgroundColor:'#024',\n                     color:\"#4a4\",\n                     margin: '4%',\n                    //  border: '2px solid #fff',\n            }}\n            >\n                <View style={{\n                    width:'80%',\n                    left:'10%',\n                    top: '5%',\n                    border: '1px solid #fff'\n                }}>\n                <Button title=\"answer1\" \n                    color=\"#250c6f\"\n                />\n\n                </View>\n\n                <View style={{\n                    width:'80%',\n                    left:'10%',\n                    top: '8%'\n                }}>\n                    <Button title=\"answer2\"\n                    color=\"#250c6f\"\n                    />\n                </View>\n            </View>\n                \n\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}