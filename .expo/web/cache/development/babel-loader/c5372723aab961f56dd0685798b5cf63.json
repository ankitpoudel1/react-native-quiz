{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ankit/Documents/simpleApp/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport QuizBody from \"./components/QuizBody\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      category = _useState4[0],\n      setCategory = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      difficulty = _useState6[0],\n      setDifficulty = _useState6[1];\n\n  var _useState7 = useState('category-select'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentPage = _useState8[0],\n      setCurrentPage = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentQuestion = _useState10[0],\n      setCurrentQuestion = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      quizLoaded = _useState12[0],\n      setQuizLoaded = _useState12[1];\n\n  var answers = [];\n\n  function fetchQuizzes() {\n    var result, json;\n    return _regeneratorRuntime.async(function fetchQuizzes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://opentdb.com/api.php?amount=10&category=' + category + '&difficulty=' + difficulty));\n\n          case 2:\n            result = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(result.json());\n\n          case 5:\n            json = _context.sent;\n            setQuestions(json.results);\n            setQuizLoaded(true);\n            setCurrentPage('quiz-page');\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n\n  function changeCategory(catId) {\n    setCategory(catId);\n    setCurrentPage('difficulty-select');\n  }\n\n  function changeDifficulty(difficulty) {\n    setDifficulty(difficulty);\n    setCurrentPage('quiz-loading');\n  }\n\n  function renderAnswerRow() {\n    console.log(questions[currentQuestion]);\n    answers = questions[currentQuestion]['incorrect-answers'];\n    console.log(answers);\n  }\n\n  useEffect(function () {\n    if (currentPage == 'quiz-loading' && !quizLoaded) {\n      fetchQuizzes();\n    }\n\n    if (questions) {\n      renderAnswerRow();\n    }\n  });\n\n  if (currentPage == 'category-select') {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, \"Welcome to quiz\"), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, \"Select Category\"), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, React.createElement(Button, {\n      onPress: function onPress() {\n        return changeCategory(21);\n      },\n      title: \"Sports\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    })), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, React.createElement(Button, {\n      onPress: function onPress() {\n        return changeCategory(19);\n      },\n      title: \"General Knowledge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    })), React.createElement(StatusBar, {\n      style: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    })));\n  } else if (currentPage == 'difficulty-select') {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Select Difficulty\")), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }\n    }, React.createElement(Button, {\n      title: \"easy\",\n      onPress: function onPress() {\n        return changeDifficulty('easy');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    })), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 8\n      }\n    }, React.createElement(Button, {\n      title: \"medium\",\n      onPress: function onPress() {\n        return changeDifficulty('medium');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    })), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 8\n      }\n    }, React.createElement(Button, {\n      title: \"hard\",\n      onPress: function onPress() {\n        return changeDifficulty('hard');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    })));\n  } else if (currentPage == 'quiz-loading') {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, \"Loading...\"));\n  } else if (currentPage == 'quiz-page') {\n    return React.createElement(View, {\n      style: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#000'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 12\n      }\n    }, React.createElement(View, {\n      style: {\n        height: '20%',\n        color: \"#fff\",\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, questions[currentQuestion]['question'])), React.createElement(View, {\n      style: {\n        height: '45%',\n        color: \"#4a4\",\n        margin: '4%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#4a4a46',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  menuButton: {\n    padding: '1%'\n  }\n});","map":{"version":3,"sources":["/home/ankit/Documents/simpleApp/App.js"],"names":["StatusBar","React","useEffect","useState","QuizBody","App","questions","setQuestions","category","setCategory","difficulty","setDifficulty","currentPage","setCurrentPage","currentQuestion","setCurrentQuestion","quizLoaded","setQuizLoaded","answers","fetchQuizzes","fetch","result","json","results","changeCategory","catId","changeDifficulty","renderAnswerRow","console","log","styles","container","padding","height","width","backgroundColor","color","alignItems","justifyContent","margin","StyleSheet","create","flex","menuButton"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useEffect, useState} from 'react';\nimport { StyleSheet, Button,Text, View } from 'react-native';\nimport QuizBody from './components/QuizBody';\n\nexport default function App() {\n\n  const [questions,setQuestions] = useState([]);\n  const [category,setCategory] = useState(null);\n  const [difficulty,setDifficulty] = useState(null);\n  const [currentPage,setCurrentPage] = useState('category-select');\n  const [currentQuestion,setCurrentQuestion] = useState(0);\n  const [quizLoaded,setQuizLoaded] = useState(false);\n \n  let answers = [];\n\n\n  async function fetchQuizzes(){ \n    const result = await fetch('https://opentdb.com/api.php?amount=10&category='+category+'&difficulty='+difficulty);\n    const json = await result.json();\n    setQuestions(json.results);\n    setQuizLoaded(true);\n    setCurrentPage('quiz-page');\n  };\n  \n  function changeCategory(catId){\n    setCategory(catId);\n    setCurrentPage('difficulty-select');\n\n  }\n\n  function changeDifficulty(difficulty){\n    setDifficulty(difficulty);\n    setCurrentPage('quiz-loading');\n  }\n\n  function renderAnswerRow(){\n\n    console.log(questions[currentQuestion]);\n    answers = questions[currentQuestion]['incorrect-answers'];\n    console.log(answers);\n  }\n\n  useEffect(()=>{\n    if (currentPage=='quiz-loading' && !quizLoaded){\n      fetchQuizzes();\n    }\n    if (questions){\n        renderAnswerRow();\n    }\n  })\n\n if (currentPage == 'category-select'){\n\n  return (\n    <View style={styles.container}>\n      <Text>Welcome to quiz</Text>\n      <Text>Select Category</Text>\n    <View>\n    \n    <View style={{padding:'1%'}}>\n    <Button\n        onPress={()=>changeCategory(21)}\n        title=\"Sports\"\n        >\n    </Button>\n    </View> \n    \n    <View style={{padding:'1%'}}>\n    <Button\n        onPress={()=>changeCategory(19)}\n        title=\"General Knowledge\">\n    </Button>\n    </View>\n      <StatusBar style=\"auto\" />\n    </View>\n    </View>\n\n  );\n  }\n  \n  else if (currentPage == 'difficulty-select') {\n    return (<View style={styles.container}>\n        <View><Text>Select Difficulty</Text></View>\n       <View style={{padding:'1%'}}><Button title=\"easy\" onPress={()=>changeDifficulty('easy')}/></View>\n       <View style={{padding:'1%'}}><Button title=\"medium\" onPress={()=>changeDifficulty('medium')}/></View> \n       <View style={{padding:'1%'}}><Button title=\"hard\" onPress={()=>changeDifficulty('hard')}/></View> \n      </View>\n    );\n  }\n\n  else if (currentPage == 'quiz-loading'){\n    return (<View style={styles.container}>\n      <Text>Loading...</Text>\n      </View>);\n  }\n\n  else if (currentPage == 'quiz-page'){\n    return(<View style={{\n                height:'100%',\n                width:'100%',\n                backgroundColor:'#000',\n            }}>\n            <View style={{\n                          height:'20%',\n                          //  width:'50%',\n                          //  backgroundColor:'#067',\n                          color:\"#fff\",\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                      }}\n            \n            >\n                <Text style={{\n                    color:'white',\n                  \n                }}>{questions[currentQuestion]['question']}</Text>\n            </View>\n            <View style={{\n                    height:'45%',\n                    //  width:'50%',\n                    //  backgroundColor:'#024',\n                     color:\"#4a4\",\n                     margin: '4%',\n                    //  border: '2px solid #fff',\n            }}\n            >\n              \n              {/* {renderAnswerRow()} */}\n            </View>\n    </View>);\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // backgroundColor: '#ed3',\n    backgroundColor: '#4a4a46',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  menuButton: {\n    padding:'1%',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}