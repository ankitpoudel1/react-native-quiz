{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ankit/Documents/simpleApp/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport QuizBody from \"./components/QuizBody\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      category = _useState4[0],\n      setCategory = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      difficulty = _useState6[0],\n      setDifficulty = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      quizLoaded = _useState8[0],\n      setQuizLoaded = _useState8[1];\n\n  var _useState9 = useState('category-select'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentPage = _useState10[0],\n      setCurrentPage = _useState10[1];\n\n  function fetchQuizzes() {\n    var result, json;\n    return _regeneratorRuntime.async(function fetchQuizzes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://opentdb.com/api.php?amount=10'));\n\n          case 2:\n            result = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(result.json());\n\n          case 5:\n            json = _context.sent;\n            console.log(json.results);\n            setQuestions(json.results);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n\n  function changeCategory(catId) {\n    setCategory(catId);\n    setCurrentPage('difficulty-select');\n  }\n\n  function changeDifficulty(difficulty) {\n    setDifficulty(difficulty);\n    setCurrentPage('quiz-loading');\n  }\n\n  useEffect(function () {\n    if (currentPage == 'quiz-loading') {\n      console.log(difficulty);\n      console.log(category);\n    }\n  });\n\n  if (currentPage == 'category-select') {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, \"Welcome to quiz\"), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, \"Select Category\"), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, React.createElement(Button, {\n      onPress: function onPress() {\n        return changeCategory(21);\n      },\n      title: \"Sports\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    })), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, React.createElement(Button, {\n      onPress: function onPress() {\n        return changeCategory(19);\n      },\n      title: \"General Knowledge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    })), React.createElement(StatusBar, {\n      style: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    })));\n  } else if (currentPage == 'difficulty-select') {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Select Difficulty\")), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }\n    }, React.createElement(Button, {\n      title: \"easy\",\n      onPress: function onPress() {\n        return changeDifficulty('easy');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    })), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }\n    }, React.createElement(Button, {\n      title: \"medium\",\n      onPress: function onPress() {\n        return changeDifficulty('medium');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    })), React.createElement(View, {\n      style: {\n        padding: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 8\n      }\n    }, React.createElement(Button, {\n      title: \"hard\",\n      onPress: function onPress() {\n        return changeDifficulty('hard');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    })));\n  } else if (currentPage == 'quiz-loading') {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, \"Loading...\"));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#4a4a46',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  menuButton: {\n    padding: '1%'\n  }\n});","map":{"version":3,"sources":["/home/ankit/Documents/simpleApp/App.js"],"names":["StatusBar","React","useEffect","useState","QuizBody","App","questions","setQuestions","category","setCategory","difficulty","setDifficulty","quizLoaded","setQuizLoaded","currentPage","setCurrentPage","fetchQuizzes","fetch","result","json","console","log","results","changeCategory","catId","changeDifficulty","styles","container","padding","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","menuButton"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useEffect, useState} from 'react';\nimport { StyleSheet, Button,Text, View } from 'react-native';\nimport QuizBody from './components/QuizBody';\n\nexport default function App() {\n\n  const [questions,setQuestions] = useState([]);\n  const [category,setCategory] = useState(null);\n  const [difficulty,setDifficulty] = useState(null);\n  const [quizLoaded,setQuizLoaded] = useState(false);\n  const [currentPage,setCurrentPage] = useState('category-select');\n \n\n\n  async function fetchQuizzes(){ \n    const result = await fetch('https://opentdb.com/api.php?amount=10');\n    const json = await result.json();\n    console.log(json.results);\n    setQuestions(json.results);\n  };\n  \n  function changeCategory(catId){\n    setCategory(catId);\n    setCurrentPage('difficulty-select');\n\n  }\n\n  function changeDifficulty(difficulty){\n    setDifficulty(difficulty);\n    setCurrentPage('quiz-loading');\n  }\n\n  useEffect(()=>{\n    if (currentPage=='quiz-loading'){\n      console.log(difficulty);\n      console.log(category);\n    }\n  })\n\n if (currentPage == 'category-select'){\n\n  return (\n    <View style={styles.container}>\n      <Text>Welcome to quiz</Text>\n      <Text>Select Category</Text>\n    <View>\n    \n    <View style={{padding:'1%'}}>\n    <Button\n        onPress={()=>changeCategory(21)}\n        title=\"Sports\"\n        >\n    </Button>\n    </View> \n    \n    <View style={{padding:'1%'}}>\n    <Button\n        onPress={()=>changeCategory(19)}\n        title=\"General Knowledge\">\n    </Button>\n    </View>\n      <StatusBar style=\"auto\" />\n    </View>\n    </View>\n\n  );\n  }\n  \n  else if (currentPage == 'difficulty-select') {\n    return (<View style={styles.container}>\n        <View><Text>Select Difficulty</Text></View>\n       <View style={{padding:'1%'}}><Button title=\"easy\" onPress={()=>changeDifficulty('easy')}/></View>\n       <View style={{padding:'1%'}}><Button title=\"medium\" onPress={()=>changeDifficulty('medium')}/></View> \n       <View style={{padding:'1%'}}><Button title=\"hard\" onPress={()=>changeDifficulty('hard')}/></View> \n      </View>\n    );\n  }\n\n  else if (currentPage == 'quiz-loading'){\n    return (<View style={styles.container}>\n      <Text>Loading...</Text>\n      </View>);\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // backgroundColor: '#ed3',\n    backgroundColor: '#4a4a46',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  menuButton: {\n    padding:'1%',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}