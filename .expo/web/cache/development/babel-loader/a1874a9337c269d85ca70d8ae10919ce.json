{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ankit/Documents/simpleApp/components/QuizBody.js\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AnswerOption from \"./AnswerOption\";\nexport default function QuizBody(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentQuestion = _useState2[0],\n      setCurrentQuestion = _useState2[1];\n\n  var question = props.questions[currentQuestion];\n  var answers = [];\n  console.log(question);\n\n  function renderAnswerRow() {\n    Object.keys(question.answers).forEach(function (key, index) {\n      if (this[key]) {\n        answers.push(React.createElement(AnswerOption, {\n          key: key,\n          answerKey: key,\n          answer: this[key],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 19\n          }\n        }));\n      }\n    }, question.answers);\n    return answers;\n  }\n\n  return React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      backgroundColor: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '20%',\n      color: \"#fff\",\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, question.question)), React.createElement(View, {\n    style: {\n      height: '45%',\n      backgroundColor: '#024',\n      color: \"#4a4\",\n      margin: '4%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, renderAnswerRow()));\n}","map":{"version":3,"sources":["/home/ankit/Documents/simpleApp/components/QuizBody.js"],"names":["React","useState","AnswerOption","QuizBody","props","currentQuestion","setCurrentQuestion","question","questions","answers","console","log","renderAnswerRow","Object","keys","forEach","key","index","push","height","width","backgroundColor","color","alignItems","justifyContent","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AAEA,OAAOC,YAAP;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACnC,kBAA6CH,QAAQ,CAAC,CAAD,CAArD;AAAA;AAAA,MAAOI,eAAP;AAAA,MAAuBC,kBAAvB;;AACA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,SAAN,CAAgBH,eAAhB,CAAjB;AACA,MAAII,OAAO,GAAG,EAAd;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,WAASK,eAAT,GAA0B;AAC1BC,IAAAA,MAAM,CAACC,IAAP,CAAYP,QAAQ,CAACE,OAArB,EAA8BM,OAA9B,CAAsC,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC1D,UAAI,KAAKD,GAAL,CAAJ,EAAc;AACdP,QAAAA,OAAO,CAACS,IAAR,CAAa,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEF,GAAnB;AAAwB,UAAA,SAAS,EAAEA,GAAnC;AAAwC,UAAA,MAAM,EAAE,KAAKA,GAAL,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AAA4E;AAC1E,KAHH,EAGKT,QAAQ,CAACE,OAHd;AAKE,WAAOA,OAAP;AACD;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTU,MAAAA,MAAM,EAAC,MADE;AAETC,MAAAA,KAAK,EAAC,MAFG;AAGTC,MAAAA,eAAe,EAAC;AAHP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACRF,MAAAA,MAAM,EAAC,KADC;AAIRG,MAAAA,KAAK,EAAC,MAJE;AAKRC,MAAAA,UAAU,EAAE,QALJ;AAMRC,MAAAA,cAAc,EAAE;AANR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTF,MAAAA,KAAK,EAAC;AADG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIf,QAAQ,CAACA,QAHb,CAVJ,CALJ,EAsBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACLY,MAAAA,MAAM,EAAC,KADF;AAGJE,MAAAA,eAAe,EAAC,MAHZ;AAIJC,MAAAA,KAAK,EAAC,MAJF;AAKJG,MAAAA,MAAM,EAAE;AALJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWKb,eAAe,EAXpB,CAtBJ,CADJ;AAyCH","sourcesContent":["import React,{useState} from 'react';\nimport { Button, View ,Text} from 'react-native';\nimport AnswerOption from './AnswerOption';\nexport default function QuizBody(props){\n    const [currentQuestion,setCurrentQuestion] = useState(0);\n    const question = props.questions[currentQuestion];\n    let answers = [];\n    // console.log(Object.keys(question.answers).length);\n    console.log(question);\n    function renderAnswerRow(){\n    Object.keys(question.answers).forEach(function(key, index) {\n     if (this[key]){\n     answers.push(<AnswerOption key={key} answerKey={key} answer={this[key]} />)}\n      }, question.answers);\n\n      return answers;\n    }\n\n    return (\n        <View style={{\n            height:'100%',\n            width:'100%',\n            backgroundColor:'#000',\n        }}>\n            <View style={{\n                 height:'20%',\n                //  width:'50%',\n                //  backgroundColor:'#067',\n                 color:\"#fff\",\n                 alignItems: 'center',\n                 justifyContent: 'center',\n            }}\n            \n            >\n                <Text style={{\n                    color:'white',\n                  \n                }}>{question.question}</Text>\n            </View>\n\n\n            <View style={{\n                    height:'45%',\n                    //  width:'50%',\n                     backgroundColor:'#024',\n                     color:\"#4a4\",\n                     margin: '4%',\n                    //  border: '2px solid #fff',\n            }}\n            >\n               \n            \n                {renderAnswerRow()}\n                \n            </View>\n                \n\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}